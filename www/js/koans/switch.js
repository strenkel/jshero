(function(testutil){jshero.koans.add({id:"switch",title:"Switch",lesson:"Die <code>switch</code>-Anweisung erm\xF6glicht es dir, verschiedene Codebl\xF6cke auszuf\xFChren \u2013 je nachdem,\nwelchen Wert eine Variable hat. Sie ist eine \xFCbersichtlichere Alternative zu mehreren <code>if...else if</code> - Bedingungen,\nwenn du dieselbe Variable mit verschiedenen Werten vergleichen willst.\nDer Vergleich erfolgt mit strikter Gleichheit (<code>===</code>).\n<br><br>\nDer Aufbau einer <code>switch</code>-Anweisung sieht so aus:\n\n<pre><code>let fruit = 'apple';\nswitch (fruit) {\n  case 'banana':\n    console.log('Yellow');\n    break;\n  case 'apple':\n    console.log('Red');\n    break;\n  default:\n    console.log('Unknown');\n}</code></pre>\n\nJeder <code>case</code> pr\xFCft, ob die Variable (hier <code>fruit</code>) einem bestimmten Wert entspricht\n(z.\u202FB. <code>'banana'</code> oder <code>'apple'</code>). Wenn eine \xDCbereinstimmung gefunden wird, wird der\nzugeh\xF6rige Code ausgef\xFChrt.\n<br><br>\nDas <code>break</code> sorgt daf\xFCr, dass der <code>switch</code>-Block danach verlassen wird.\nWenn man <code>break</code> wegl\xE4sst, wird der Code des n\xE4chsten <code>case</code> ausgef\xFChrt, auch wenn dessen Bedingung\nnicht erf\xFCllt ist. Da das zu un\xFCbersichtlichem Code f\xFChrt, sollte man jeden <code>case</code> mit <code>break</code> beenden.\nIn Funktionen kann man alternativ auch <code>return</code> verwenden.\n<br><br>\nFalls kein <code>case</code> passt, wird der Code im <code>default</code>-Block (sofern vorhanden) ausgef\xFChrt.\nIm obigen Beispiel hat <code>fruit</code> den Wert <code>'apple'</code>, daher wird <code>Red</code> ausgegeben.",task:"Schreibe eine Funktion <code>getDayName</code>, die eine Zahl zwischen 1 und 7 entgegennimmt und den\nentsprechenden Wochentag zur\xFCckgibt. Wird keine Zahl zwischen 1 und 7 \xFCbergeben, soll <code>'unbekannt'</code>\nzur\xFCckgegben werden.<br><br>Beispiel: <code>getDayName(1)</code> sollte <code>'Montag'</code> zur\xFCckgeben.",hint:"<pre><code>function getDayName(n) {\n  switch (n) {\n    ...\n  }\n}</code></pre>",solution:"<pre><code>function getDayName(n) {\n  switch (n) {\n    case 1:\n      return 'Montag';\n    case 2:\n      return 'Dienstag';\n    case 3:\n      return 'Mittwoch';\n    case 4:\n      return 'Donnerstag';\n    case 5:\n      return 'Freitag';\n    case 6:\n      return 'Samstag';\n    case 7:\n      return 'Sonntag';\n    default:\n      return 'unbekannt';\n  }\n}</code></pre>",tests:[function(){return testutil.assert_isFunction("getDayName")},function(){return testutil.assert_functionHasNumOfParameter("getDayName",1)},function(){return testutil.assert_functionReturns("getDayName(1)","Montag")},function(){return testutil.assert_functionReturns("getDayName(2)","Dienstag")},function(){return testutil.assert_functionReturns("getDayName(3)","Mittwoch")},function(){return testutil.assert_functionReturns("getDayName(4)","Donnerstag")},function(){return testutil.assert_functionReturns("getDayName(5)","Freitag")},function(){return testutil.assert_functionReturns("getDayName(6)","Samstag")},function(){return testutil.assert_functionReturns("getDayName(7)","Sonntag")},function(){return testutil.assert_functionReturns("getDayName(0)","unbekannt")},function(){return testutil.assert_functionReturns("getDayName(8)","unbekannt")}]})})(jshero.testutil);