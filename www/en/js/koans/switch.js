(function(testutil){jshero.koans.add({id:"switch",title:"Switch",lesson:"The <code>switch</code> statement allows you to execute different blocks of code based on the value of a variable.  \nIt's a cleaner alternative to writing multiple <code>if...else if</code> conditions when checking the same variable\nagainst different values. The comparison is made with strict equality (===).\n<br><br>\nThe structure of a <code>switch</code> statement looks like this:\n\n<pre><code>let fruit = 'apple';\nswitch (fruit) {\n  case 'banana':\n    console.log('Yellow');\n    break;\n  case 'apple':\n    console.log('Red');\n    break;\n  default:\n    console.log('unknown');\n}</code></pre>\n\nEach <code>case</code> compares the value of the variable (in this case, <code>fruit</code>) with a specific value\n(like <code>'banana'</code> or <code>'apple'</code>). If a match is found, the corresponding code block is executed.\n<br><br>\nThe <code>break</code> statement tells the program to exit the <code>switch</code> after executing the matching case.\nIf you omit break, the code of the next case is executed, even if its condition is not fulfilled.\nThis can lead to confusing code, so it's best to end each case with <code>break</code>.\nIn functions, you can also use <code>return</code> as an alternative.\n<br><br>\nIf no <code>case</code> matches, the code in <code>default</code> will run (if provided).\nIn the example above, the value of <code>fruit</code> is <code>'apple'</code>, so the output is <code>Red</code>.",task:"Write a function <code>getDayName</code> that takes a number between 1 and 7 and returns the corresponding\nweekday name. If no number between 1 and 7 is passed, <code>'unknown'</code> should be returned.\n<br><br>\nExample: <code>getDayName(1)</code> should return <code>'Monday'</code>.",hint:"<pre><code>function getDayName(n) {\n  switch (n) {\n    ...\n  }\n}</code></pre>",solution:"<pre><code>function getDayName(n) {\n  switch (n) {\n    case 1:\n      return 'Monday';\n    case 2:\n      return 'Tuesday';\n    case 3:\n      return 'Wednesday';\n    case 4:\n      return 'Thursday';\n    case 5:\n      return 'Friday';\n    case 6:\n      return 'Saturday';\n    case 7:\n      return 'Sunday';\n    default:\n      return 'unknown';\n  }\n}</code></pre>",tests:[function(){return testutil.assert_isFunction("getDayName")},function(){return testutil.assert_functionHasNumOfParameter("getDayName",1)},function(){return testutil.assert_functionReturns("getDayName(1)","Monday")},function(){return testutil.assert_functionReturns("getDayName(2)","Tuesday")},function(){return testutil.assert_functionReturns("getDayName(3)","Wednesday")},function(){return testutil.assert_functionReturns("getDayName(4)","Thursday")},function(){return testutil.assert_functionReturns("getDayName(5)","Friday")},function(){return testutil.assert_functionReturns("getDayName(6)","Saturday")},function(){return testutil.assert_functionReturns("getDayName(7)","Sunday")},function(){return testutil.assert_functionReturns("getDayName(8)","unknown")},function(){return testutil.assert_functionReturns("getDayName(0)","unknown")}]})})(jshero.testutil);